name: PR Build

on:
  issue_comment:
    types: [ created ]

jobs:
  comment-check:
    name: comment-check
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
      comment_body: ${{ steps.check.outputs.comment_body }}
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/build'
          reaction: rocket
          prefix_only: 'true'
        env:
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  pr-build:
    name: pr-build
    needs: [ comment-check ]
    if: needs.comment-check.outputs.triggered == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR of this comment
        uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              core.info(`Using commit sha ${result.data.head.sha}`)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
      - name: Get the version
        id: get_version
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Generate migration file
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v3
        with:
          script: |
            core.info(`version ${{ steps.get_version.outputs.VERSION }}`)
